{"version":3,"file":"angular-tag-cloud-module.umd.js.map","sources":["ng://angular-tag-cloud-module/src/app/tag-cloud-module/tag-cloud.component.ts","ng://angular-tag-cloud-module/src/app/tag-cloud-module/tag-cloud.module.ts"],"sourcesContent":["import { Component,\n         OnChanges,\n         AfterContentInit,\n         AfterContentChecked,\n         Input,\n         Output,\n         EventEmitter,\n         ElementRef,\n         Renderer2,\n         SimpleChanges,\n         HostListener } from '@angular/core';\nimport { CloudData, CloudOptions, ZoomOnHoverOptions } from './tag-cloud.interfaces';\n\ninterface CloudOptionsInternal extends CloudOptions {\n  step: number;\n\n  /**\n   * setting the aspect ratio. This value is calculated by the given width and height\n   */\n  aspectRatio: number;\n  center: {\n    x: number;\n    y: number;\n  };\n}\n\n@Component({\n  selector: 'angular-tag-cloud, ng-tag-cloud, ngtc',\n  template: '',\n  styleUrls: ['./tag-cloud.component.css']\n})\nexport class TagCloudComponent implements OnChanges, AfterContentInit, AfterContentChecked {\n  @Input() data: CloudData[];\n  @Input() width? = 500;\n  @Input() height? = 300;\n  @Input() overflow? = true;\n  @Input() strict? = false;\n  @Input() zoomOnHover?: ZoomOnHoverOptions = { transitionTime: 0, scale: 1, delay: 0, color: null };\n  @Input() realignOnResize? = false;\n  @Input() randomizeAngle? = false;\n\n  @Output() clicked?: EventEmitter<CloudData> = new EventEmitter();\n  @Output() dataChanges?: EventEmitter<SimpleChanges> = new EventEmitter();\n  @Output() afterInit?: EventEmitter<void> = new EventEmitter();\n  @Output() afterChecked?: EventEmitter<void> = new EventEmitter();\n\n  private _dataArr: CloudData[];\n  private _alreadyPlacedWords: HTMLElement[] = [];\n\n  private _options: CloudOptionsInternal;\n  private _timeoutId;\n\n  constructor(\n    private el: ElementRef,\n    private r2: Renderer2\n  ) { }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    window.clearTimeout(this._timeoutId);\n    this._timeoutId = window.setTimeout(() => {\n      if (this.realignOnResize) {\n        this.reDraw();\n      }\n    }, 200);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.reDraw(changes);\n  }\n\n  reDraw(changes?: SimpleChanges) {\n    this.dataChanges.emit(changes);\n    this._alreadyPlacedWords = [];\n\n    // check if data is not null or empty\n    if (!this.data) {\n      console.error('angular-tag-cloud: No data passed. Please pass an Array of CloudData');\n      return;\n    }\n\n    // values changed, reset cloud\n    this.el.nativeElement.innerHTML = '';\n\n    // set value changes\n    if (changes && changes['data']) {\n      this._dataArr = changes['data'].currentValue;\n    }\n\n    let width = this.width;\n    if (this.el.nativeElement.parentNode.offsetWidth > 0\n      && width <= 1\n      && width > 0\n    ) {\n      width = this.el.nativeElement.parentNode.offsetWidth * width;\n    }\n\n    // set options\n    this._options = {\n      step: 2.0,\n      aspectRatio: (width / this.height),\n      width: width,\n      height: this.height,\n      center: {\n        x: (width / 2.0),\n        y: (this.height / 2.0)\n      },\n      overflow: this.overflow,\n      zoomOnHover: this.zoomOnHover\n    };\n\n    this.r2.setStyle(this.el.nativeElement, 'width', this._options.width + 'px');\n    this.r2.setStyle(this.el.nativeElement, 'height', this._options.height + 'px');\n    // draw the cloud\n    this.drawWordCloud();\n  }\n\n\n  ngAfterContentInit() {\n    this.afterInit.emit();\n  }\n\n  ngAfterContentChecked() {\n    this.afterChecked.emit();\n  }\n\n  // helper to generate a descriptive string for an entry to use when sorting alphabetically\n  descriptiveEntry(entry: CloudData): string {\n    let description = entry.text;\n    if (entry.color) {\n      description += '-' + entry.color;\n    }\n    if (entry.external) {\n      description += '-' + entry.external;\n    }\n    if (entry.link) {\n      description += '-' + entry.link;\n    }\n    if (entry.rotate) {\n      description += '-' + entry.rotate;\n    }\n    return description;\n  }\n\n  drawWordCloud () {\n    // Sort alphabetically to ensure that, all things being equal, words are placed uniformly\n    this._dataArr.sort( (a, b) => (this.descriptiveEntry(a)).localeCompare(this.descriptiveEntry(b)));\n    // Sort this._dataArr from the word with the highest weight to the one with the lowest\n    this._dataArr.sort((a, b) => b.weight - a.weight);\n    this._dataArr.forEach((elem, index) => {\n      this.drawWord(index, elem);\n    });\n  }\n\n  // Helper function to test if an element overlaps others\n  hitTest(currentEl: HTMLElement, otherEl: HTMLElement[]): boolean {\n    // Check elements for overlap one by one, stop and return false as soon as an overlap is found\n    for (let i = 0; i < otherEl.length; i++) {\n      if (this.overlapping(currentEl, otherEl[i])) { return true; }\n    }\n    return false;\n  }\n\n  // Pairwise overlap detection\n  overlapping(a: HTMLElement, b: HTMLElement): boolean {\n    return (Math.abs(2.0 * a.offsetLeft + a.offsetWidth  - 2.0 * b.offsetLeft - b.offsetWidth)  < a.offsetWidth  + b.offsetWidth &&\n            Math.abs(2.0 * a.offsetTop  + a.offsetHeight - 2.0 * b.offsetTop  - b.offsetHeight) < a.offsetHeight + b.offsetHeight)\n    ? true : false;\n  }\n\n  // Function to draw a word, by moving it in spiral until it finds a suitable empty place. This will be iterated on each word.\n  drawWord(index: number, word: CloudData) {\n    // Define the ID attribute of the span that will wrap the word\n    let angle = this.randomizeAngle ? 6.28 * Math.random() : 0,\n        radius = 0.0,\n        weight = 5,\n        wordSpan: HTMLElement;\n\n    // Check if min(weight) > max(weight) otherwise use default\n    if (this._dataArr[0].weight > this._dataArr[this._dataArr.length - 1].weight) {\n      // check if strict mode is active\n      if (!this.strict) { // Linearly map the original weight to a discrete scale from 1 to 10\n        weight = Math.round((word.weight - this._dataArr[this._dataArr.length - 1].weight) /\n                  (this._dataArr[0].weight - this._dataArr[this._dataArr.length - 1].weight) * 9.0) + 1;\n      } else { // use given value for weigth directly\n        // fallback to 10\n        if (word.weight > 10) {\n          weight = 10;\n          console.log(`[TagCloud strict] Weight property ${word.weight} > 10. Fallback to 10 as you are using strict mode`, word);\n        } else if (word.weight < 1) { // fallback to 1\n          weight = 1;\n          console.log(`[TagCloud strict] Given weight property ${word.weight} < 1. Fallback to 1 as you are using strict mode`, word);\n        } else if (word.weight % 1 !== 0) { // round if given value is not an integer\n          weight = Math.round(word.weight);\n          console.log(`[TagCloud strict] Given weight property ${word.weight} is not an integer. Rounded value to ${weight}`, word);\n        } else {\n          weight = word.weight;\n        }\n\n      }\n    }\n\n    // Create a new span and insert node.\n    wordSpan = this.r2.createElement('span');\n    wordSpan.className = 'w' + weight;\n\n    const thatClicked = this.clicked;\n    wordSpan.onclick = () => {\n      thatClicked.emit(word);\n    };\n\n    let node = this.r2.createText(word.text);\n\n    // set color\n    if (word.color) {\n      this.r2.setStyle(wordSpan, 'color', word.color);\n    }\n\n    let transformString = '';\n\n    // set color\n    if (word.rotate) {\n      transformString = `rotate(${word.rotate}deg)`;\n      this.r2.setStyle(wordSpan, 'transform', transformString);\n    }\n\n    // Append href if there's a link alongwith the tag\n    if (word.link) {\n      const wordLink = this.r2.createElement('a');\n      wordLink.href = word.link;\n\n      if (word.external !== undefined && word.external) {\n        wordLink.target = '_blank';\n      }\n\n      wordLink.appendChild(node);\n      node = wordLink;\n    }\n\n    // set zoomOption\n    if (this.zoomOnHover && this.zoomOnHover.scale !== 1) {\n      if (!this.zoomOnHover.transitionTime) { this.zoomOnHover.transitionTime = 0; }\n      if (!this.zoomOnHover.scale) { this.zoomOnHover.scale = 1; }\n\n      wordSpan.onmouseover = () => {\n        this.r2.setStyle(wordSpan, 'transition', `transform ${this.zoomOnHover.transitionTime}s`);\n        this.r2.setStyle(wordSpan, 'transform', `scale(${this.zoomOnHover.scale}) ${transformString}`);\n        this.r2.setStyle(wordSpan, 'transition-delay', `${this.zoomOnHover.delay}s`);\n        if (this.zoomOnHover.color) {\n          word.link\n            ? this.r2.setStyle(node, 'color', this.zoomOnHover.color)\n            : this.r2.setStyle(wordSpan, 'color', this.zoomOnHover.color);\n        }\n      };\n\n      wordSpan.onmouseout = () => {\n        this.r2.setStyle(wordSpan, 'transform', `scale(1) ${transformString}`);\n        word.link\n          ? this.r2.removeStyle(node, 'color')\n          : this.r2.removeStyle(wordSpan, 'color');\n      };\n    }\n\n    wordSpan.appendChild(node);\n    this.r2.appendChild(this.el.nativeElement, wordSpan);\n\n    const width = wordSpan.offsetWidth;\n    const height = wordSpan.offsetHeight;\n    let left = this._options.center.x;\n    let top = this._options.center.y;\n\n    // Save a reference to the style property, for better performance\n    const wordStyle = wordSpan.style;\n    wordStyle.position = 'absolute';\n\n    // place the first word\n    wordStyle.left = left + 'px';\n    wordStyle.top = top + 'px';\n\n    // add tooltip if provided\n    if (word.tooltip) {\n      this.r2.addClass(wordSpan, 'tooltip');\n      const tooltipSpan = this.r2.createElement('span');\n      tooltipSpan.className = 'tooltiptext';\n      const text = this.r2.createText(word.tooltip);\n      tooltipSpan.appendChild(text);\n      wordSpan.appendChild(tooltipSpan);\n    }\n\n    while (this.hitTest(wordSpan, this._alreadyPlacedWords)) {\n      radius += this._options.step;\n      angle += (index % 2 === 0 ? 1 : -1) * this._options.step;\n\n      left = this._options.center.x - (width / 2.0) + (radius * Math.cos(angle)) * this._options.aspectRatio;\n      top = this._options.center.y + radius * Math.sin(angle) - (height / 2.0);\n\n      wordStyle.left = left + 'px';\n      wordStyle.top = top + 'px';\n    }\n\n    // Don't render word if part of it would be outside the container\n    if (\n      !this._options.overflow &&\n      (left < 0 || top < 0 || (left + width) > this._options.width ||\n      (top + height) > this._options.height)\n    ) {\n      wordSpan.remove();\n      return;\n    }\n\n    this._alreadyPlacedWords.push(wordSpan);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { TagCloudComponent } from './tag-cloud.component';\n\n@NgModule({\n  declarations: [TagCloudComponent],\n  exports: [TagCloudComponent],\n  entryComponents: [TagCloudComponent]\n})\nexport class TagCloudModule { }\n"],"names":["EventEmitter","Component","ElementRef","Renderer2","Input","Output","HostListener","NgModule"],"mappings":"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"}
