{"version":3,"file":"angular-tag-cloud-module.js.map","sources":["ng://angular-tag-cloud-module/src/app/tag-cloud-module/tag-cloud.component.ts","ng://angular-tag-cloud-module/src/app/tag-cloud-module/tag-cloud.module.ts"],"sourcesContent":["import { Component,\n         OnChanges,\n         AfterContentInit,\n         AfterContentChecked,\n         Input,\n         Output,\n         EventEmitter,\n         ElementRef,\n         Renderer2,\n         SimpleChanges,\n         HostListener } from '@angular/core';\nimport { CloudData, CloudOptions, ZoomOnHoverOptions } from './tag-cloud.interfaces';\n\ninterface CloudOptionsInternal extends CloudOptions {\n  step: number;\n\n  /**\n   * setting the aspect ratio. This value is calculated by the given width and height\n   */\n  aspectRatio: number;\n  center: {\n    x: number;\n    y: number;\n  };\n}\n\n@Component({\n  selector: 'angular-tag-cloud, ng-tag-cloud, ngtc',\n  template: '',\n  styleUrls: ['./tag-cloud.component.css']\n})\nexport class TagCloudComponent implements OnChanges, AfterContentInit, AfterContentChecked {\n  @Input() data: CloudData[];\n  @Input() width? = 500;\n  @Input() height? = 300;\n  @Input() overflow? = true;\n  @Input() strict? = false;\n  @Input() zoomOnHover?: ZoomOnHoverOptions = { transitionTime: 0, scale: 1, delay: 0, color: null };\n  @Input() realignOnResize? = false;\n  @Input() randomizeAngle? = false;\n\n  @Output() clicked?: EventEmitter<CloudData> = new EventEmitter();\n  @Output() dataChanges?: EventEmitter<SimpleChanges> = new EventEmitter();\n  @Output() afterInit?: EventEmitter<void> = new EventEmitter();\n  @Output() afterChecked?: EventEmitter<void> = new EventEmitter();\n\n  private _dataArr: CloudData[];\n  private _alreadyPlacedWords: HTMLElement[] = [];\n\n  private _options: CloudOptionsInternal;\n  private _timeoutId;\n\n  constructor(\n    private el: ElementRef,\n    private r2: Renderer2\n  ) { }\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    window.clearTimeout(this._timeoutId);\n    this._timeoutId = window.setTimeout(() => {\n      if (this.realignOnResize) {\n        this.reDraw();\n      }\n    }, 200);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.reDraw(changes);\n  }\n\n  reDraw(changes?: SimpleChanges) {\n    this.dataChanges.emit(changes);\n    this._alreadyPlacedWords = [];\n\n    // check if data is not null or empty\n    if (!this.data) {\n      console.error('angular-tag-cloud: No data passed. Please pass an Array of CloudData');\n      return;\n    }\n\n    // values changed, reset cloud\n    this.el.nativeElement.innerHTML = '';\n\n    // set value changes\n    if (changes && changes['data']) {\n      this._dataArr = changes['data'].currentValue;\n    }\n\n    let width = this.width;\n    if (this.el.nativeElement.parentNode.offsetWidth > 0\n      && width <= 1\n      && width > 0\n    ) {\n      width = this.el.nativeElement.parentNode.offsetWidth * width;\n    }\n\n    // set options\n    this._options = {\n      step: 2.0,\n      aspectRatio: (width / this.height),\n      width: width,\n      height: this.height,\n      center: {\n        x: (width / 2.0),\n        y: (this.height / 2.0)\n      },\n      overflow: this.overflow,\n      zoomOnHover: this.zoomOnHover\n    };\n\n    this.r2.setStyle(this.el.nativeElement, 'width', this._options.width + 'px');\n    this.r2.setStyle(this.el.nativeElement, 'height', this._options.height + 'px');\n    // draw the cloud\n    this.drawWordCloud();\n  }\n\n\n  ngAfterContentInit() {\n    this.afterInit.emit();\n  }\n\n  ngAfterContentChecked() {\n    this.afterChecked.emit();\n  }\n\n  // helper to generate a descriptive string for an entry to use when sorting alphabetically\n  descriptiveEntry(entry: CloudData): string {\n    let description = entry.text;\n    if (entry.color) {\n      description += '-' + entry.color;\n    }\n    if (entry.external) {\n      description += '-' + entry.external;\n    }\n    if (entry.link) {\n      description += '-' + entry.link;\n    }\n    if (entry.rotate) {\n      description += '-' + entry.rotate;\n    }\n    return description;\n  }\n\n  drawWordCloud () {\n    // Sort alphabetically to ensure that, all things being equal, words are placed uniformly\n    this._dataArr.sort( (a, b) => (this.descriptiveEntry(a)).localeCompare(this.descriptiveEntry(b)));\n    // Sort this._dataArr from the word with the highest weight to the one with the lowest\n    this._dataArr.sort((a, b) => b.weight - a.weight);\n    this._dataArr.forEach((elem, index) => {\n      this.drawWord(index, elem);\n    });\n  }\n\n  // Helper function to test if an element overlaps others\n  hitTest(currentEl: HTMLElement, otherEl: HTMLElement[]): boolean {\n    // Check elements for overlap one by one, stop and return false as soon as an overlap is found\n    for (let i = 0; i < otherEl.length; i++) {\n      if (this.overlapping(currentEl, otherEl[i])) { return true; }\n    }\n    return false;\n  }\n\n  // Pairwise overlap detection\n  overlapping(a: HTMLElement, b: HTMLElement): boolean {\n    return (Math.abs(2.0 * a.offsetLeft + a.offsetWidth  - 2.0 * b.offsetLeft - b.offsetWidth)  < a.offsetWidth  + b.offsetWidth &&\n            Math.abs(2.0 * a.offsetTop  + a.offsetHeight - 2.0 * b.offsetTop  - b.offsetHeight) < a.offsetHeight + b.offsetHeight)\n    ? true : false;\n  }\n\n  // Function to draw a word, by moving it in spiral until it finds a suitable empty place. This will be iterated on each word.\n  drawWord(index: number, word: CloudData) {\n    // Define the ID attribute of the span that will wrap the word\n    let angle = this.randomizeAngle ? 6.28 * Math.random() : 0,\n        radius = 0.0,\n        weight = 5,\n        wordSpan: HTMLElement;\n\n    // Check if min(weight) > max(weight) otherwise use default\n    if (this._dataArr[0].weight > this._dataArr[this._dataArr.length - 1].weight) {\n      // check if strict mode is active\n      if (!this.strict) { // Linearly map the original weight to a discrete scale from 1 to 10\n        weight = Math.round((word.weight - this._dataArr[this._dataArr.length - 1].weight) /\n                  (this._dataArr[0].weight - this._dataArr[this._dataArr.length - 1].weight) * 9.0) + 1;\n      } else { // use given value for weigth directly\n        // fallback to 10\n        if (word.weight > 10) {\n          weight = 10;\n          console.log(`[TagCloud strict] Weight property ${word.weight} > 10. Fallback to 10 as you are using strict mode`, word);\n        } else if (word.weight < 1) { // fallback to 1\n          weight = 1;\n          console.log(`[TagCloud strict] Given weight property ${word.weight} < 1. Fallback to 1 as you are using strict mode`, word);\n        } else if (word.weight % 1 !== 0) { // round if given value is not an integer\n          weight = Math.round(word.weight);\n          console.log(`[TagCloud strict] Given weight property ${word.weight} is not an integer. Rounded value to ${weight}`, word);\n        } else {\n          weight = word.weight;\n        }\n\n      }\n    }\n\n    // Create a new span and insert node.\n    wordSpan = this.r2.createElement('span');\n    wordSpan.className = 'w' + weight;\n\n    const thatClicked = this.clicked;\n    wordSpan.onclick = () => {\n      thatClicked.emit(word);\n    };\n\n    let node = this.r2.createText(word.text);\n\n    // set color\n    if (word.color) {\n      this.r2.setStyle(wordSpan, 'color', word.color);\n    }\n\n    let transformString = '';\n\n    // set color\n    if (word.rotate) {\n      transformString = `rotate(${word.rotate}deg)`;\n      this.r2.setStyle(wordSpan, 'transform', transformString);\n    }\n\n    // Append href if there's a link alongwith the tag\n    if (word.link) {\n      const wordLink = this.r2.createElement('a');\n      wordLink.href = word.link;\n\n      if (word.external !== undefined && word.external) {\n        wordLink.target = '_blank';\n      }\n\n      wordLink.appendChild(node);\n      node = wordLink;\n    }\n\n    // set zoomOption\n    if (this.zoomOnHover && this.zoomOnHover.scale !== 1) {\n      if (!this.zoomOnHover.transitionTime) { this.zoomOnHover.transitionTime = 0; }\n      if (!this.zoomOnHover.scale) { this.zoomOnHover.scale = 1; }\n\n      wordSpan.onmouseover = () => {\n        this.r2.setStyle(wordSpan, 'transition', `transform ${this.zoomOnHover.transitionTime}s`);\n        this.r2.setStyle(wordSpan, 'transform', `scale(${this.zoomOnHover.scale}) ${transformString}`);\n        this.r2.setStyle(wordSpan, 'transition-delay', `${this.zoomOnHover.delay}s`);\n        if (this.zoomOnHover.color) {\n          word.link\n            ? this.r2.setStyle(node, 'color', this.zoomOnHover.color)\n            : this.r2.setStyle(wordSpan, 'color', this.zoomOnHover.color);\n        }\n      };\n\n      wordSpan.onmouseout = () => {\n        this.r2.setStyle(wordSpan, 'transform', `scale(1) ${transformString}`);\n        word.link\n          ? this.r2.removeStyle(node, 'color')\n          : this.r2.removeStyle(wordSpan, 'color');\n      };\n    }\n\n    wordSpan.appendChild(node);\n    this.r2.appendChild(this.el.nativeElement, wordSpan);\n\n    const width = wordSpan.offsetWidth;\n    const height = wordSpan.offsetHeight;\n    let left = this._options.center.x;\n    let top = this._options.center.y;\n\n    // Save a reference to the style property, for better performance\n    const wordStyle = wordSpan.style;\n    wordStyle.position = 'absolute';\n\n    // place the first word\n    wordStyle.left = left + 'px';\n    wordStyle.top = top + 'px';\n\n    // add tooltip if provided\n    if (word.tooltip) {\n      this.r2.addClass(wordSpan, 'tooltip');\n      const tooltipSpan = this.r2.createElement('span');\n      tooltipSpan.className = 'tooltiptext';\n      const text = this.r2.createText(word.tooltip);\n      tooltipSpan.appendChild(text);\n      wordSpan.appendChild(tooltipSpan);\n    }\n\n    while (this.hitTest(wordSpan, this._alreadyPlacedWords)) {\n      radius += this._options.step;\n      angle += (index % 2 === 0 ? 1 : -1) * this._options.step;\n\n      left = this._options.center.x - (width / 2.0) + (radius * Math.cos(angle)) * this._options.aspectRatio;\n      top = this._options.center.y + radius * Math.sin(angle) - (height / 2.0);\n\n      wordStyle.left = left + 'px';\n      wordStyle.top = top + 'px';\n    }\n\n    // Don't render word if part of it would be outside the container\n    if (\n      !this._options.overflow &&\n      (left < 0 || top < 0 || (left + width) > this._options.width ||\n      (top + height) > this._options.height)\n    ) {\n      wordSpan.remove();\n      return;\n    }\n\n    this._alreadyPlacedWords.push(wordSpan);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { TagCloudComponent } from './tag-cloud.component';\n\n@NgModule({\n  declarations: [TagCloudComponent],\n  exports: [TagCloudComponent],\n  entryComponents: [TagCloudComponent]\n})\nexport class TagCloudModule { }\n"],"names":[],"mappings":"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"}
